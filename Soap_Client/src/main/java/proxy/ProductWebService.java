
package proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.3
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ProductWebService", targetNamespace = "http://webService.soapserver.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProductWebService {


    /**
     * 
     * @param productId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeProduct", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.RemoveProduct")
    @ResponseWrapper(localName = "removeProductResponse", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.RemoveProductResponse")
    @Action(input = "http://webService.soapserver.example.com/ProductWebService/removeProductRequest", output = "http://webService.soapserver.example.com/ProductWebService/removeProductResponse")
    public String removeProduct(
        @WebParam(name = "productId", targetNamespace = "")
        Integer productId);

    /**
     * 
     * @param product
     * @return
     *     returns proxy.Product
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewProduct", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.CreateNewProduct")
    @ResponseWrapper(localName = "createNewProductResponse", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.CreateNewProductResponse")
    @Action(input = "http://webService.soapserver.example.com/ProductWebService/createNewProductRequest", output = "http://webService.soapserver.example.com/ProductWebService/createNewProductResponse")
    public Product createNewProduct(
        @WebParam(name = "product", targetNamespace = "")
        Product product);

    /**
     * 
     * @param productId
     * @param updatedProduct
     * @return
     *     returns proxy.Product
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifyProduct", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.ModifyProduct")
    @ResponseWrapper(localName = "modifyProductResponse", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.ModifyProductResponse")
    @Action(input = "http://webService.soapserver.example.com/ProductWebService/modifyProductRequest", output = "http://webService.soapserver.example.com/ProductWebService/modifyProductResponse")
    public Product modifyProduct(
        @WebParam(name = "productId", targetNamespace = "")
        Integer productId,
        @WebParam(name = "updatedProduct", targetNamespace = "")
        Product updatedProduct);

    /**
     * 
     * @param productId
     * @return
     *     returns proxy.Product
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchProduct", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.FetchProduct")
    @ResponseWrapper(localName = "fetchProductResponse", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.FetchProductResponse")
    @Action(input = "http://webService.soapserver.example.com/ProductWebService/fetchProductRequest", output = "http://webService.soapserver.example.com/ProductWebService/fetchProductResponse")
    public Product fetchProduct(
        @WebParam(name = "productId", targetNamespace = "")
        Integer productId);

    /**
     * 
     * @param productId
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateSellingPrice", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.CalculateSellingPrice")
    @ResponseWrapper(localName = "calculateSellingPriceResponse", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.CalculateSellingPriceResponse")
    @Action(input = "http://webService.soapserver.example.com/ProductWebService/calculateSellingPriceRequest", output = "http://webService.soapserver.example.com/ProductWebService/calculateSellingPriceResponse")
    public Double calculateSellingPrice(
        @WebParam(name = "productId", targetNamespace = "")
        Integer productId);

    /**
     * 
     * @return
     *     returns java.util.List<proxy.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveAllProducts", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.RetrieveAllProducts")
    @ResponseWrapper(localName = "retrieveAllProductsResponse", targetNamespace = "http://webService.soapserver.example.com/", className = "proxy.RetrieveAllProductsResponse")
    @Action(input = "http://webService.soapserver.example.com/ProductWebService/retrieveAllProductsRequest", output = "http://webService.soapserver.example.com/ProductWebService/retrieveAllProductsResponse")
    public List<Product> retrieveAllProducts();

}
